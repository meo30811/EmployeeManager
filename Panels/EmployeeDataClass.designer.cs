#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Panels
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="myDb")]
	public partial class EmployeeDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblEmployee(tblEmployee instance);
    partial void UpdatetblEmployee(tblEmployee instance);
    partial void DeletetblEmployee(tblEmployee instance);
    partial void InserttblDepartment(tblDepartment instance);
    partial void UpdatetblDepartment(tblDepartment instance);
    partial void DeletetblDepartment(tblDepartment instance);
    #endregion
		
		public EmployeeDataClassDataContext() : 
				base(global::Panels.Properties.Settings.Default.myDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblEmployee> tblEmployees
		{
			get
			{
				return this.GetTable<tblEmployee>();
			}
		}
		
		public System.Data.Linq.Table<tblDepartment> tblDepartments
		{
			get
			{
				return this.GetTable<tblDepartment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmployees")]
	public partial class tblEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emp_ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Design;
		
		private string _Email;
		
		private string _address;
		
		private string _Gender;
		
		private string _Employee_ID;
		
		private System.DateTime _Date_today;
		
		private System.DateTime _Date_from;
		
		private System.DateTime _Date_to;
		
		private string _shift;
		
		private int _Department_Id;
		
		private EntityRef<tblDepartment> _tblDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmp_IDChanging(int value);
    partial void OnEmp_IDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDesignChanging(string value);
    partial void OnDesignChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEmployee_IDChanging(string value);
    partial void OnEmployee_IDChanged();
    partial void OnDate_todayChanging(System.DateTime value);
    partial void OnDate_todayChanged();
    partial void OnDate_fromChanging(System.DateTime value);
    partial void OnDate_fromChanged();
    partial void OnDate_toChanging(System.DateTime value);
    partial void OnDate_toChanged();
    partial void OnshiftChanging(string value);
    partial void OnshiftChanged();
    partial void OnDepartment_IdChanging(int value);
    partial void OnDepartment_IdChanged();
    #endregion
		
		public tblEmployee()
		{
			this._tblDepartment = default(EntityRef<tblDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Emp_ID
		{
			get
			{
				return this._Emp_ID;
			}
			set
			{
				if ((this._Emp_ID != value))
				{
					this.OnEmp_IDChanging(value);
					this.SendPropertyChanging();
					this._Emp_ID = value;
					this.SendPropertyChanged("Emp_ID");
					this.OnEmp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Design", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Design
		{
			get
			{
				return this._Design;
			}
			set
			{
				if ((this._Design != value))
				{
					this.OnDesignChanging(value);
					this.SendPropertyChanging();
					this._Design = value;
					this.SendPropertyChanged("Design");
					this.OnDesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(MAX)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_ID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Employee_ID
		{
			get
			{
				return this._Employee_ID;
			}
			set
			{
				if ((this._Employee_ID != value))
				{
					this.OnEmployee_IDChanging(value);
					this.SendPropertyChanging();
					this._Employee_ID = value;
					this.SendPropertyChanged("Employee_ID");
					this.OnEmployee_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_today", DbType="DateTime NOT NULL")]
		public System.DateTime Date_today
		{
			get
			{
				return this._Date_today;
			}
			set
			{
				if ((this._Date_today != value))
				{
					this.OnDate_todayChanging(value);
					this.SendPropertyChanging();
					this._Date_today = value;
					this.SendPropertyChanged("Date_today");
					this.OnDate_todayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_from", DbType="DateTime NOT NULL")]
		public System.DateTime Date_from
		{
			get
			{
				return this._Date_from;
			}
			set
			{
				if ((this._Date_from != value))
				{
					this.OnDate_fromChanging(value);
					this.SendPropertyChanging();
					this._Date_from = value;
					this.SendPropertyChanged("Date_from");
					this.OnDate_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_to", DbType="DateTime NOT NULL")]
		public System.DateTime Date_to
		{
			get
			{
				return this._Date_to;
			}
			set
			{
				if ((this._Date_to != value))
				{
					this.OnDate_toChanging(value);
					this.SendPropertyChanging();
					this._Date_to = value;
					this.SendPropertyChanged("Date_to");
					this.OnDate_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string shift
		{
			get
			{
				return this._shift;
			}
			set
			{
				if ((this._shift != value))
				{
					this.OnshiftChanging(value);
					this.SendPropertyChanging();
					this._shift = value;
					this.SendPropertyChanged("shift");
					this.OnshiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_Id", DbType="Int NOT NULL")]
		public int Department_Id
		{
			get
			{
				return this._Department_Id;
			}
			set
			{
				if ((this._Department_Id != value))
				{
					if (this._tblDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartment_IdChanging(value);
					this.SendPropertyChanging();
					this._Department_Id = value;
					this.SendPropertyChanged("Department_Id");
					this.OnDepartment_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblEmployee", Storage="_tblDepartment", ThisKey="Department_Id", OtherKey="Department_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblDepartment tblDepartment
		{
			get
			{
				return this._tblDepartment.Entity;
			}
			set
			{
				tblDepartment previousValue = this._tblDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tblDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDepartment.Entity = null;
						previousValue.tblEmployees.Remove(this);
					}
					this._tblDepartment.Entity = value;
					if ((value != null))
					{
						value.tblEmployees.Add(this);
						this._Department_Id = value.Department_Id;
					}
					else
					{
						this._Department_Id = default(int);
					}
					this.SendPropertyChanged("tblDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDepartments")]
	public partial class tblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Department_Id;
		
		private string _Name;
		
		private EntitySet<tblEmployee> _tblEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartment_IdChanging(int value);
    partial void OnDepartment_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblDepartment()
		{
			this._tblEmployees = new EntitySet<tblEmployee>(new Action<tblEmployee>(this.attach_tblEmployees), new Action<tblEmployee>(this.detach_tblEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Department_Id
		{
			get
			{
				return this._Department_Id;
			}
			set
			{
				if ((this._Department_Id != value))
				{
					this.OnDepartment_IdChanging(value);
					this.SendPropertyChanging();
					this._Department_Id = value;
					this.SendPropertyChanged("Department_Id");
					this.OnDepartment_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblEmployee", Storage="_tblEmployees", ThisKey="Department_Id", OtherKey="Department_Id")]
		public EntitySet<tblEmployee> tblEmployees
		{
			get
			{
				return this._tblEmployees;
			}
			set
			{
				this._tblEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = this;
		}
		
		private void detach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = null;
		}
	}
}
#pragma warning restore 1591
